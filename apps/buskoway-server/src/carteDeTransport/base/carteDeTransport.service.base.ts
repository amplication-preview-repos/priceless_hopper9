/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CarteDeTransport as PrismaCarteDeTransport,
} from "@prisma/client";

export class CarteDeTransportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CarteDeTransportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.carteDeTransport.count(args);
  }

  async carteDeTransports<T extends Prisma.CarteDeTransportFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarteDeTransportFindManyArgs>
  ): Promise<PrismaCarteDeTransport[]> {
    return this.prisma.carteDeTransport.findMany<Prisma.CarteDeTransportFindManyArgs>(
      args
    );
  }
  async carteDeTransport<T extends Prisma.CarteDeTransportFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarteDeTransportFindUniqueArgs>
  ): Promise<PrismaCarteDeTransport | null> {
    return this.prisma.carteDeTransport.findUnique(args);
  }
  async createCarteDeTransport<T extends Prisma.CarteDeTransportCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarteDeTransportCreateArgs>
  ): Promise<PrismaCarteDeTransport> {
    return this.prisma.carteDeTransport.create<T>(args);
  }
  async updateCarteDeTransport<T extends Prisma.CarteDeTransportUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarteDeTransportUpdateArgs>
  ): Promise<PrismaCarteDeTransport> {
    return this.prisma.carteDeTransport.update<T>(args);
  }
  async deleteCarteDeTransport<T extends Prisma.CarteDeTransportDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarteDeTransportDeleteArgs>
  ): Promise<PrismaCarteDeTransport> {
    return this.prisma.carteDeTransport.delete(args);
  }
}
